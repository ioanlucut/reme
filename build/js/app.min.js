/*! reme.io 2.0.0 - 2014-23-12, 2:22:30 AM */
angular.module("common",["ui.router","restmod","ui.bootstrap.transition","ui.bootstrap.datepicker","ui.bootstrap.dropdown","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.modal"]).config(["$httpProvider",function(a){a.interceptors.push("HumpsInterceptor"),a.interceptors.push("JWTInterceptor")}]),angular.module("common").constant("STATES",{home:"home",profile:"profile",reminders:"reminders",account:"account"}).constant("ACCESS_LEVEL",{forLoggedUser:"forLoggedUser",forGuestUser:"forGuestUser"}),angular.module("common").directive("animate",function(){return{restrict:"A",link:function(a,b,c){a.$on(c.animateOn,function(){b.addClass(c.animateClass)}),b.on("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){b.removeClass(c.animateClass)})}}}),angular.module("common").directive("autoFocus",["$timeout",function(a){return{restrict:"A",link:function(b,c,d){d.autoFocus?b.$watch(d.autoFocus,function(b){b===!0&&a(function(){c.focus()})}):c.focus()}}}]),angular.module("ui.bootstrap.datepicker",["ui.bootstrap.position"]).constant("datepickerConfig",{dayFormat:"dd",monthFormat:"MMMM",yearFormat:"yyyy",dayHeaderFormat:"EEE",dayTitleFormat:"MMMM yyyy",monthTitleFormat:"yyyy",showWeeks:!0,startingDay:0,yearRange:20,minDate:null,maxDate:null}).controller("DatepickerController",["$scope","$attrs","dateFilter","datepickerConfig",function(a,b,c,d){function e(b,c){return angular.isDefined(b)?a.$parent.$eval(b):c}function f(a,b){return new Date(a,b,0).getDate()}function g(a,b){for(var c=new Array(b),d=a,e=0;b>e;)c[e++]=new Date(d),d.setDate(d.getDate()+1);return c}function h(a,b,d,e){return{date:a,label:c(a,b),selected:!!d,secondary:!!e}}var i={day:e(b.dayFormat,d.dayFormat),month:e(b.monthFormat,d.monthFormat),year:e(b.yearFormat,d.yearFormat),dayHeader:e(b.dayHeaderFormat,d.dayHeaderFormat),dayTitle:e(b.dayTitleFormat,d.dayTitleFormat),monthTitle:e(b.monthTitleFormat,d.monthTitleFormat)},j=e(b.startingDay,d.startingDay),k=e(b.yearRange,d.yearRange);this.minDate=d.minDate?new Date(d.minDate):null,this.maxDate=d.maxDate?new Date(d.maxDate):null,this.modes=[{name:"day",getVisibleDates:function(a,b){var d=a.getFullYear(),e=a.getMonth(),k=new Date(d,e,1),l=j-k.getDay(),m=l>0?7-l:-l,n=new Date(k),o=0;m>0&&(n.setDate(-m+1),o+=m),o+=f(d,e+1),o+=(7-o%7)%7;for(var p=g(n,o),q=new Array(7),r=0;o>r;r++){var s=new Date(p[r]);p[r]=h(s,i.day,b&&b.getDate()===s.getDate()&&b.getMonth()===s.getMonth()&&b.getFullYear()===s.getFullYear(),s.getMonth()!==e)}for(var t=0;7>t;t++)q[t]=c(p[t].date,i.dayHeader);return{objects:p,title:c(a,i.dayTitle),labels:q}},compare:function(a,b){return new Date(a.getFullYear(),a.getMonth(),a.getDate())-new Date(b.getFullYear(),b.getMonth(),b.getDate())},split:7,step:{months:1}},{name:"month",getVisibleDates:function(a,b){for(var d=new Array(12),e=a.getFullYear(),f=0;12>f;f++){var g=new Date(e,f,1);d[f]=h(g,i.month,b&&b.getMonth()===f&&b.getFullYear()===e)}return{objects:d,title:c(a,i.monthTitle)}},compare:function(a,b){return new Date(a.getFullYear(),a.getMonth())-new Date(b.getFullYear(),b.getMonth())},split:3,step:{years:1}},{name:"year",getVisibleDates:function(a,b){for(var c=new Array(k),d=a.getFullYear(),e=parseInt((d-1)/k,10)*k+1,f=0;k>f;f++){var g=new Date(e+f,0,1);c[f]=h(g,i.year,b&&b.getFullYear()===g.getFullYear())}return{objects:c,title:[c[0].label,c[k-1].label].join(" - ")}},compare:function(a,b){return a.getFullYear()-b.getFullYear()},split:5,step:{years:k}}],this.isDisabled=function(b,c){var d=this.modes[c||0];return this.minDate&&d.compare(b,this.minDate)<0||this.maxDate&&d.compare(b,this.maxDate)>0||a.dateDisabled&&a.dateDisabled({date:b,mode:d.name})}}]).directive("datepicker",["dateFilter","$parse","datepickerConfig","$log",function(a,b,c,d){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/datepicker.html",scope:{dateDisabled:"&"},require:["datepicker","?^ngModel"],controller:"DatepickerController",link:function(a,e,f,g){function h(){a.showWeekNumbers=0===o&&q}function i(a,b){for(var c=[];a.length>0;)c.push(a.splice(0,b));return c}function j(b){var c=null,e=!0;n.$modelValue&&(c=new Date(n.$modelValue),isNaN(c)?(e=!1,d.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):b&&(p=c)),n.$setValidity("date",e);var f=m.modes[o],g=f.getVisibleDates(p,c);angular.forEach(g.objects,function(a){a.disabled=m.isDisabled(a.date,o)}),n.$setValidity("date-disabled",!c||!m.isDisabled(c)),a.rows=i(g.objects,f.split),a.labels=g.labels||[],a.title=g.title}function k(a){o=a,h(),j()}function l(a){var b=new Date(a);b.setDate(b.getDate()+4-(b.getDay()||7));var c=b.getTime();return b.setMonth(0),b.setDate(1),Math.floor(Math.round((c-b)/864e5)/7)+1}var m=g[0],n=g[1];if(n){var o=0,p=new Date,q=c.showWeeks;f.showWeeks?a.$parent.$watch(b(f.showWeeks),function(a){q=!!a,h()}):h(),f.min&&a.$parent.$watch(b(f.min),function(a){m.minDate=a?new Date(a):null,j()}),f.max&&a.$parent.$watch(b(f.max),function(a){m.maxDate=a?new Date(a):null,j()}),n.$render=function(){j(!0)},a.select=function(a){if(0===o){var b=n.$modelValue?new Date(n.$modelValue):new Date(0,0,0,0,0,0,0);b.setFullYear(a.getFullYear(),a.getMonth(),a.getDate()),n.$setViewValue(b),j(!0)}else p=a,k(o-1)},a.move=function(a){var b=m.modes[o].step;p.setMonth(p.getMonth()+a*(b.months||0)),p.setFullYear(p.getFullYear()+a*(b.years||0)),j()},a.toggleMode=function(){k((o+1)%m.modes.length)},a.getWeekNumber=function(b){return 0===o&&a.showWeekNumbers&&7===b.length?l(b[0].date):null}}}}}]).constant("datepickerPopupConfig",{dateFormat:"yyyy-MM-dd",currentText:"Today",toggleWeeksText:"Weeks",clearText:"Clear",closeText:"Done",closeOnDateSelection:!0,appendToBody:!1,showButtonBar:!0}).directive("datepickerPopup",["$compile","$parse","$document","$position","dateFilter","datepickerPopupConfig","datepickerConfig",function(a,b,c,d,e,f,g){return{restrict:"EA",require:"ngModel",link:function(h,i,j,k){function l(a){u?u(h,!!a):q.isOpen=!!a}function m(a){if(a){if(angular.isDate(a))return k.$setValidity("date",!0),a;if(angular.isString(a)){var b=new Date(a);return isNaN(b)?void k.$setValidity("date",!1):(k.$setValidity("date",!0),b)}return void k.$setValidity("date",!1)}return k.$setValidity("date",!0),null}function n(a,c,d){a&&(h.$watch(b(a),function(a){q[c]=a}),y.attr(d||c,c))}function o(){q.position=s?d.offset(i):d.position(i),q.position.top=q.position.top+i.prop("offsetHeight")}var p,q=h.$new(),r=angular.isDefined(j.closeOnDateSelection)?h.$eval(j.closeOnDateSelection):f.closeOnDateSelection,s=angular.isDefined(j.datepickerAppendToBody)?h.$eval(j.datepickerAppendToBody):f.appendToBody;j.$observe("datepickerPopup",function(a){p=a||f.dateFormat,k.$render()}),q.showButtonBar=angular.isDefined(j.showButtonBar)?h.$eval(j.showButtonBar):f.showButtonBar,h.$on("$destroy",function(){A.remove(),q.$destroy()}),j.$observe("currentText",function(a){q.currentText=angular.isDefined(a)?a:f.currentText}),j.$observe("toggleWeeksText",function(a){q.toggleWeeksText=angular.isDefined(a)?a:f.toggleWeeksText}),j.$observe("clearText",function(a){q.clearText=angular.isDefined(a)?a:f.clearText}),j.$observe("closeText",function(a){q.closeText=angular.isDefined(a)?a:f.closeText});var t,u;j.isOpen&&(t=b(j.isOpen),u=t.assign,h.$watch(t,function(a){q.isOpen=!!a})),q.isOpen=t?t(h):!1;var v=function(a){q.isOpen&&a.target!==i[0]&&q.$apply(function(){l(!1)})},w=function(a){q.$apply(function(){l(!q.isOpen)}),a.preventDefault(),a.stopPropagation()},x=angular.element("<div datepicker-popup-wrap><div datepicker></div></div>");x.attr({"ng-model":"date","ng-change":"dateSelection()"});var y=angular.element(x.children()[0]),z={};j.datepickerOptions&&(z=h.$eval(j.datepickerOptions),y.attr(angular.extend({},z))),k.$parsers.unshift(m),q.dateSelection=function(a){angular.isDefined(a)&&(q.date=a),k.$setViewValue(q.date),k.$render(),r&&l(!1)},i.bind("input change keyup",function(){q.$apply(function(){q.date=k.$modelValue})}),k.$render=function(){var a=k.$viewValue?e(k.$viewValue,p):"";i.val(a),q.date=k.$modelValue},n(j.min,"min"),n(j.max,"max"),j.showWeeks?n(j.showWeeks,"showWeeks","show-weeks"):(q.showWeeks="show-weeks"in z?z["show-weeks"]:g.showWeeks,y.attr("show-weeks","showWeeks")),j.dateDisabled&&y.attr("date-disabled",j.dateDisabled),i.bind("click",w),q.$watch("isOpen",function(a){a?(o(),c.bind("click",v)):c.unbind("click",v),u&&u(h,a)}),q.today=function(){var a=new Date;a.setHours(q.date.getHours()),a.setMinutes(q.date.getMinutes()),a.setSeconds(q.date.getSeconds()),q.dateSelection(a)},q.clear=function(){q.dateSelection(null)};var A=a(x)(q);s?c.find("body").append(A):i.after(A)}}}]).directive("datepickerPopupWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"template/datepicker/popup.html",link:function(a,b){b.bind("click",function(a){a.preventDefault(),a.stopPropagation()})}}}),angular.module("common").directive("emailList",[function(){return{restrict:"A",require:"ngModel",scope:{emails:"=ngModel",parentForm:"="},templateUrl:"app/common/partials/emailList/emailList.html",link:function(a,b,c){a.canAddEmail=!0,a.$watch("emails.length",function(a,c){a>c&&b.find("input").focus()}),a.addEmail=function(b){(isNaN(c.maxEmails)||a.emails.length<parseInt(c.maxEmails))&&a.emails.push(b),!isNaN(c.maxEmails)&&a.emails.length>=parseInt(c.maxEmails)&&(a.canAddEmail=!1)},a.removeEmail=function(b){a.emails.splice(b,1),a.canAddEmail=!0}}}}]),angular.module("common").directive("focusFirstError",[function(){return{restrict:"A",link:function(a,b,c){var d=c.focusFirstError||".form-control.ng-invalid";b.on("submit",function(){b.find(d).first().focus()})}}}]),angular.module("common").directive("header",function(){return{restrict:"A",templateUrl:"app/common/partials/header.html",link:function(){}}}),angular.module("common").directive("headerHome",function(){return{restrict:"A",templateUrl:"app/common/partials/header-home.html",link:function(){}}}),angular.module("common").directive("nlpDate",["$rootScope","$",function(a,b){return{require:"ngModel",scope:{date:"=",text:"=ngModel"},restrict:"A",link:function(c,d,e,f){c.$watch("text",function(d){if(e.required&&d&&e.separator&&f.$setValidity("nlp-required",0!=b.trim(d).indexOf(e.separator)),d&&e.separator&&(d=d.split(e.separator)[1]),d){var g;switch(e.prefer){case"past":g=Date.past(d);break;case"future":g=Date.future(d);break;default:g=Date.create(d)}g.isValid()&&(e.minDate&&g.isBefore(e.minDate)||e.maxDate&&g.isAfter(e.maxDate)||((c.date.getYear()!=g.getYear()||c.date.getMonth()!=g.getMonth()||c.date.getDay()!=g.getDay())&&a.$broadcast("nlpDate:dateChange",null),(c.date.getHours()!=g.getHours()||c.date.getMinutes()!=g.getMinutes()||c.date.getSeconds()!=g.getSeconds())&&a.$broadcast("nlpDate:timeChange",null),c.date=g))}})}}}]),angular.module("common").directive("perfectScrollbar",function(){return{restrict:"A",link:function(a,b,c){b.perfectScrollbar({wheelSpeed:a.$eval(c.wheelSpeed)||50,wheelPropagation:a.$eval(c.wheelPropagation)||!1,minScrollbarLength:a.$eval(c.minScrollbarLength)||!1,useBothWheelAxes:a.$eval(c.useBothWheelAxes)||!1,useKeyboard:a.$eval(c.useKeyboard)||!0,suppressScrollX:a.$eval(c.suppressScrollX)||!1,suppressScrollY:a.$eval(c.suppressScrollY)||!1,scrollXMarginOffset:a.$eval(c.scrollXMarginOffset)||0,scrollYMarginOffset:a.$eval(c.scrollYMarginOffset)||0}),c.updateOn&&a.$on(c.updateOn,function(){b.perfectScrollbar("update")})}}}),angular.module("common").directive("scrollTo",["$window","$",function(a,b){return{restrict:"A",link:function(a,c,d){c.on("click",function(a){b("html, body").animate({scrollTop:b(d.scrollTo).offset().top},parseInt(d.scrollSpeed)||800),a.preventDefault()})}}}]),angular.module("common").directive("timepickerPopup",function(){return{require:"ngModel",scope:{date:"=ngModel"},templateUrl:"app/common/partials/timepickerPopup/timepickerPopup.html",restrict:"A",link:function(a,b,c){a.times=function(){var b=new Date;b.setHours(0),b.setMinutes(0);for(var d=b.getTime(),e=a.$eval(c.step)||30,f=1440/e,g=[],h=0;f>h;h++){var i=new Date(d);a.date.getHours()==i.getHours()&&a.date.getMinutes()==i.getMinutes()&&(a.selectedIndex=h),g.push({index:h,hour:i.getHours(),minute:i.getMinutes(),timestamp:d}),d+=60*e*1e3}return g}(),a.$watch("date",function(b){a.selectedIndex=null;for(var c=0;c<a.times.length;c++)b.getHours()==a.times[c].hour&&b.getMinutes()==a.times[c].minute&&(a.selectedIndex=c)}),a.setTime=function(b,c,d){a.selectedIndex=b,a.date.setHours(c),a.date.setMinutes(d)};var d=b.children().eq(0),e=b.children().eq(1);d.on("click",function(){var b=e.children().eq(a.selectedIndex);e.scrollTop(0);var c=Math.round(e.height()/b.outerHeight()),d=b.position().top-(Math.round(.5*c)-1)*b.outerHeight();e.scrollTop(Math.max(d,0)),a.highlightSelected=!0,a.$apply(),a.$broadcast("perfectScrollbar:update",null)}),e.on("mouseenter",function(){a.highlightSelected=!1,a.$apply()})}}}),angular.module("common").filter("friendlyDate",function(){return function(a){_.isDate(a)||(a=moment(a).toDate());var b="{Weekday}, {dd} {Month} {yyyy}";return a.isToday()&&(b="Today, {dd} {Month} {yyyy}"),a.isTomorrow()&&(b="Tomorrow, {dd} {Month} {yyyy}"),a.format(b)}}),angular.module("common").filter("friendlyHour",function(){return function(a){return moment(a).format("h:mm")}}),angular.module("common").filter("orderObjectBy",function(){return function(a,b,c){function d(a,b){return a[b]}var e=[];return angular.forEach(a,function(a){e.push(a)}),e.sort(function(a,c){var e,f=b.split(".").reduce(d,a),g=b.split(".").reduce(d,c);return e=f===g?0:f>g?1:-1}),c&&e.reverse(),e}}),angular.module("common").service("CamelCaseTransform",["humps",function(a){this.TRANSFORMATION_TYPE={CAMELIZE:"CAMELIZE",DECAMELIZE:"DECAMELIZE"},this.transform=function(a,b){a&&_.isArray(a)?_.each(a,_.bind(function(a){this.transformObject(a,b)},this)):this.transformObject(a,b)},this.transformObject=function(b,c){var d=this;b&&_.isObject(b)&&_.each(b,function(e,f){if(b.hasOwnProperty(f)){var g=c===d.TRANSFORMATION_TYPE.CAMELIZE?a.camelize(f):a.decamelize(f);f!==g&&(b[g]=b[f],delete b[f])}})}}]),angular.module("common").factory("HumpsInterceptor",["CamelCaseTransform",function(a){return{request:function(b){return a.transform(b.data,a.TRANSFORMATION_TYPE.DECAMELIZE),b},response:function(b){return a.transform(b.data,a.TRANSFORMATION_TYPE.CAMELIZE),b}}}]),angular.module("common").factory("humps",[function(){return window.humps}]),angular.module("common").factory("$",[function(){return window.$}]),angular.module("common").factory("jstz",[function(){return window.jstz}]),angular.module("common").service("JWTHelper",function(){this.urlBase64Decode=function(a){var b=a.replace("-","+").replace("_","/");switch(b.length%4){case 0:break;case 2:b+="==";break;case 3:b+="=";break;default:throw"Illegal base64url string!"}return window.atob(b)},this.decodeToken=function(a){var b=a.split(".");if(3!==b.length)throw new Error("JWT must have 3 parts");var c=this.urlBase64Decode(b[1]);if(!c)throw new Error("Cannot decode the token");return JSON.parse(c)},this.getTokenExpirationDate=function(a){var b;if(b=this.decodeToken(a),!b.exp)return null;var c=new Date(0);return c.setUTCSeconds(b.exp),c},this.isTokenExpired=function(a){var b=this.getTokenExpirationDate(a);return b?!(b.valueOf()>(new Date).valueOf()):!1}}),angular.module("common").provider("JWTInterceptor",function(){this.authHeader="Authorization",this.authPrefix="Bearer ";var a=this;this.$get=["$q","$injector","$rootScope","SessionService","JWTTokenRefresher",function(b,c,d,e,f){return{request:function(d){if(d.skipAuthorization)return d;if(d.headers=d.headers||{},d.headers[a.authHeader])return d;e.sessionExists()&&f.refreshTokenIfExpired();var g=b.when(c.invoke(function(){return e.getJwtToken()},this,{config:d}));return g.then(function(b){return b&&(d.headers[a.authHeader]=a.authPrefix+b),d})}}}]}),angular.module("common").service("JWTTokenRefresher",["$injector","JWTHelper","SessionService",function(a,b,c){this.refreshTokenIfExpired=function(){this.isTokenExpired()&&this.refreshToken()},this.isTokenExpired=function(){return b.isTokenExpired(c.getJwtToken())},this.refreshToken=function(){return a.get("AuthService").refreshToken()}}]),angular.module("common").factory("mixpanel",[function(){return window.mixpanel}]),angular.module("common").service("SessionService",["$cookies","CamelCaseTransform",function(a,b){var c="auth_session_data",d="auth_jwt_token";this.create=function(a,b){this.setData(a),this.setJwtToken(b)},this.setData=function(d){b.transform(d,b.TRANSFORMATION_TYPE.CAMELIZE),a[c]=angular.toJson(d)},this.getData=function(){return angular.fromJson(a[c])},this.setJwtToken=function(b){a[d]=angular.toJson(b)},this.getJwtToken=function(){return angular.fromJson(a[d])},this.sessionExists=function(){return a[c]&&a[d]},this.destroy=function(){delete a[c],delete a[d]}}]),angular.module("common").service("StatesHandler",["$state","$stateParams","STATES",function(a,b,c){this.goHome=function(){this.go(c.home)},this.goToProfile=function(){this.go(c.profile)},this.goToReminders=function(){this.go(c.reminders)},this.goToLogin=function(){this.go(c.account)},this.goToResetPassword=function(){this.go(c.account)},this.go=function(b){a.go(b)},this.refreshCurrentState=function(){a.transitionTo(a.current,b,{reload:!0,inherit:!1,notify:!0})}}]),angular.module("common").service("TransformerUtils",function(){this.copyKeysFromTo=function(a,b,c){_.each(_.keys(a),function(d){c&&_.contains(c,d)||(b[d]=a[d])})}}),angular.module("common").factory("URLTo",[function(){return window.URLTo}]),angular.module("account",["ui.router","restmod","common"]).config(["$stateProvider","$httpProvider",function(a,b){b.interceptors.push("AuthInterceptor"),a.state("account",{url:"/account",controller:"LoginCtrl",templateUrl:"app/account/partials/account.html"}).state("profile",{url:"/profile",templateUrl:"app/account/partials/profile.html",controller:"ProfileCtrl",title:"Profile"}).state("account:logout",{url:"/account/logout",controller:"LogoutCtrl",templateUrl:"app/account/partials/logout.html",resolve:{isSuccessfullyLoggedOut:["$q","AuthService",function(a,b){return b.logout(),!0}]}}).state({name:"account:validatePasswordResetToken",url:"/account/reset-password/{token}",templateUrl:"app/account/partials/validate_password_reset_token_abstract.html","abstract":!0}).state({name:"account:validatePasswordResetToken.valid",url:"",templateUrl:"app/account/partials/validate_password_reset_token.html",controller:"ValidatePasswordResetTokenCtrl",resolve:{validateTokenResult:["$stateParams","$q","AuthService","$state",function(a,b,c,d){var e=b.defer();return c.validatePasswordResetToken(a.token).then(function(a){return e.resolve({email:a.email}),a})["catch"](function(a){return d.go("account:validatePasswordResetToken.invalid"),a}),e.promise}]}}).state({name:"account:validatePasswordResetToken.invalid",url:"invalid-token",templateUrl:"app/account/partials/validate_password_reset_token_invalid.html",controller:"ValidatePasswordResetTokenInvalidCtrl"}).state({name:"account:confirmRegistration",url:"/account/confirm-registration/{token}",templateUrl:"app/account/partials/signup_confirm_abstract.html","abstract":!0}).state({name:"account:confirmRegistration.valid",url:"",templateUrl:"app/account/partials/signup_confirm_valid.html",controller:"SignUpConfirmCtrl",resolve:{validateRegistrationResult:["$stateParams","$q","AuthService","$state","$timeout",function(a,b,c,d){var e=b.defer();return c.validateRegistrationToken(a.token).then(function(a){return e.resolve({successful:a.successful}),a})["catch"](function(a){return d.go("account:confirmRegistration.invalid"),a}),e.promise}]}}).state({name:"account:confirmRegistration.invalid",url:"registration-failed",templateUrl:"app/account/partials/signup_confirm_invalid.html",controller:"SignUpConfirmInvalidCtrl"})}]).run(["$rootScope","AuthFilter",function(a,b){a.$on("$stateChangeStart",b)}]),angular.module("account").constant("AUTH_EVENTS",{isLoggedIn:"auth-is-logged-in",loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("AUTH_URLS",{login:"auth/login",logout:"auth/logout",currentUser:"auth/user",auth:"accounts",create:"accounts/create",update:"accounts/update",details:"accounts/details",requestPasswordReset:"accounts/request_password_reset_token",requestSignUpRegistration:"accounts/request_registration",validatePasswordResetToken:"accounts/validate_password_reset_token/:token",validateRegistrationToken:"accounts/validate_registration_token/:token",updatePassword:"accounts/update_password",resetPasswordWithToken:"accounts/reset_password_with_token/:token",refreshToken:"auth/refresh_token"}).constant("ACCOUNT_FORM_STATE",{login:"login",logout:"logout",signUp:"signUp",signUpSuccessfully:"signUpSuccessfully",forgotPassword:"forgotPassword",forgotPasswordEmailSent:"forgotPasswordEmailSent",requestSignUpRegistration:"requestSignUpRegistration",requestSignUpRegistrationEmailSent:"requestSignUpRegistrationEmailSent",updateProfile:"updateProfile",resetPassword:"resetPassword",resetPasswordSuccessfully:"resetPasswordSuccessfully",updatePassword:"updatePassword",updatePasswordSuccessfully:"updatePasswordSuccessfully"}).constant("AUTH_TOKEN_HEADER","authtoken"),angular.module("account").constant("USER_URLS",{userUnique:"accounts/is_unique_email"}),angular.module("account").controller("ForgotPasswordCtrl",["$state","$scope","AuthService","AUTH_EVENTS","ACCOUNT_FORM_STATE","AccountFormToggle",function(a,b,c,d,e,f){b.isRequestPasswordErrorOcurred=!1,b.errorMessages="",b.forgotPasswordData={email:""},b.requestPasswordReset=function(){b.forgotPasswordForm.$valid&&c.requestPasswordReset(b.forgotPasswordData.email).then(function(){b.isRequestPasswordErrorOcurred=!1,f.setState(e.forgotPasswordEmailSent)})["catch"](function(a){b.isRequestPasswordErrorOcurred=!0,b.errorMessages=a.data&&a.data.errors})}}]),angular.module("account").controller("LoginCtrl",["$scope","AuthService","AUTH_EVENTS","ACCOUNT_FORM_STATE","AccountFormToggle","StatesHandler",function(a,b,c,d,e,f){e.setState(d.login),a.isAuthenticationErrorOcurred=!1,a.loginData={email:"",password:""},a.login=function(c){a.loginForm.$valid&&b.login(c.email,c.password).then(function(){a.isAuthenticationErrorOcurred=!1,f.goToReminders()})["catch"](function(){a.isAuthenticationErrorOcurred=!0})}}]),angular.module("account").controller("LogoutCtrl",["$scope","$timeout","AuthService","$cookies","StatesHandler","isSuccessfullyLoggedOut",function(a,b,c,d,e,f){a.isSuccessfullyLoggedOut=f,b(function(){e.goHome()},1500)}]),angular.module("account").controller("ProfileCtrl",["$q","$scope","$rootScope","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE",function(a,b,c,d,e,f){e.setState(f.updateProfile),b.user=c.currentUser,b.errorMessages="",b.profileData={firstName:b.user.model.firstName,lastName:b.user.model.lastName,email:b.user.model.email,timezone:b.user.model.timezone},b.updateProfile=function(a){b.profileForm.$valid&&b.user.$save(a).then(function(){b.user.$refresh().then(function(){b.profileForm.$setPristine(),b.errorMessages="",b.isProfileUpdated=!0})})["catch"](function(a){b.errorMessages=a.data&&a.data.errors&&a.data.errors.email,_.isEmpty(b.errorMessages)&&(b.errorMessages=["We encountered a small problem. Please be patient, we come back to you."]),b.isProfileUpdated=!1})},b.getMeBack=function(){d.goToReminders()}}]),angular.module("account").controller("RequestSignUpRegistrationCtrl",["$state","$scope","AuthService","AUTH_EVENTS","ACCOUNT_FORM_STATE","AccountFormToggle",function(a,b,c,d,e,f){f.setState(e.requestSignUpRegistration),b.isRequestSignUpRegistrationErrorOcurred=!1,b.requestSignUpRegistrationData={email:""},b.requestSignUpRegistration=function(){b.requestSignUpRegistrationForm.$valid&&c.requestSignUpRegistration(b.requestSignUpRegistrationData.email).then(function(){b.isRequestSignUpRegistrationErrorOcurred=!1,f.setState(e.requestSignUpRegistrationEmailSent)})["catch"](function(){b.isRequestSignUpRegistrationErrorOcurred=!0})}}]),angular.module("account").controller("SignUpConfirmCtrl",["$scope","StatesHandler","AccountFormToggle","$timeout","ACCOUNT_FORM_STATE","validateRegistrationResult",function(a,b,c,d,e,f){a.validateRegistrationResult=f,c.setState(e.signUp),a.isSignUpErrorOcurred=!1,a.errorMessages="",a.signUpData={firstName:"",lastName:"",email:"test",password:"",timezone:""},a.signUp=function(f){a.signUpForm.$valid&&(a.signUpData.timezone=jstz.determine().name(),User.$new().$create(f).then(function(){a.isSignUpErrorOcurred=!1,c.setState(e.signUpSuccessfully),d(function(){b.goToLogin()},2e3)})["catch"](function(b){a.errorMessages=b.data&&b.data.errors,_.isEmpty(a.errorMessages)&&(a.errorMessages=["We encountered a small problem. Please be patient, we come back to you."]),a.isSignUpErrorOcurred=!0}))},a.continueToLogin=function(){d(function(){c.setState(e.login),b.goToLogin()},400)}}]),angular.module("account").controller("SignUpConfirmInvalidCtrl",function(){}),angular.module("account").controller("UpdatePasswordCtrl",["$scope","AuthService","ACCOUNT_FORM_STATE","ProfileFormToggle",function(a,b,c,d){a.isUpdatePasswordErrorOcurred=!1,a.errorMessages="",a.updatePasswordData={oldPassword:"",newPassword:"",newPasswordConfirmation:""},a.updatePassword=function(e){a.updatePasswordForm.$valid&&b.updatePassword(e.oldPassword,e.newPassword,e.newPasswordConfirmation).then(function(){a.isUpdatePasswordErrorOcurred=!1,d.setState(c.updatePasswordSuccessfully)})["catch"](function(b){a.isUpdatePasswordErrorOcurred=!0,a.errorMessages=b.data&&b.data.errors,_.isEmpty(a.errorMessages)&&(a.errorMessages=["We encountered a small problem. Please be patient, we come back to you."]),a.updatePasswordData.oldPassword="",a.updatePasswordData.newPassword="",a.updatePasswordData.newPasswordConfirmation=""})}}]),angular.module("account").controller("ValidatePasswordResetTokenCtrl",["$scope","$stateParams","$timeout","AuthService","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE","validateTokenResult",function(a,b,c,d,e,f,g,h){a.isResetPasswordErrorOcurred=!1,a.errorMessages="",a.resetPasswordData={email:h.email,password:"",passwordConfirmation:"",token:b.token},a.resetPassword=function(b){a.resetPasswordForm.$valid&&d.resetPasswordWithToken(b.email,b.password,b.passwordConfirmation,b.token).then(function(){a.isResetPasswordErrorOcurred=!1,a.successfullyReseted=!0,f.setState(g.resetPasswordSuccessfully),d.login(b.email,b.password).then(function(){c(function(){e.goToReminders()},1500)})})["catch"](function(b){a.isResetPasswordErrorOcurred=!0,a.errorMessages=b.data&&b.data.errors,_.isEmpty(a.errorMessages)&&(a.errorMessages=["We encountered a small problem. Please be patient, we come back to you."]),a.resetPasswordData.newPassword="",a.resetPasswordData.newPasswordConfirmation=""})}}]),angular.module("account").controller("ValidatePasswordResetTokenInvalidCtrl",["$scope","AuthService","StatesHandler","ProfileFormToggle","ACCOUNT_FORM_STATE",function(a,b,c,d,e){a.isUserAuthenticated=b.isAuthenticated(),a.continueToResetPassword=function(){a.isUserAuthenticated&&b.logout(),d.setState(e.forgotPassword),c.goToLogin()}}]),angular.module("account").directive("accountFormToggle",["AccountFormToggle","ACCOUNT_FORM_STATE",function(a,b){return{restrict:"A",link:function(c){c.AccountFormToggle=a,c.ACCOUNT_FORM_STATE=b}}}]),angular.module("account").directive("profileFormToggle",["ProfileFormToggle","ACCOUNT_FORM_STATE",function(a,b){return{restrict:"A",link:function(c){c.ProfileFormToggle=a,c.ACCOUNT_FORM_STATE=b}}}]),angular.module("account").directive("strongPassword",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return!!a&&a.length>=7}d.$validators.strongPassword=function(a){return e(a)}}}}),angular.module("account").directive("uniqueEmail",["$q","$timeout","UserService",function(a,b,c){return{require:"ngModel",scope:{ngModel:"="},link:function(b,d,e,f){f.$asyncValidators.uniqueEmail=function(b){var d=a.defer();return c.isUnique(b).then(function(a){a.isUnique?d.resolve(a.isUnique):d.reject()}),d.promise}}}}]),angular.module("account").directive("validEmail",function(){return{require:"ngModel",link:function(a,b,c,d){function e(a){return/[^\s@]+@[^\s@]+\.[^\s@]+/.test(a)}d.$validators.validEmail=function(a){return e(a)}}}}),angular.module("account").service("AccountFormToggle",["ACCOUNT_FORM_STATE",function(a){this.state=a.login,this.setState=function(a){this.state=a}}]),angular.module("account").service("AuthService",["$rootScope","$q","$http","$cookies","SessionService","AUTH_EVENTS","AUTH_URLS","AUTH_TOKEN_HEADER",function(a,b,c,d,e,f,g,h){this.isAuthenticated=function(){return e.sessionExists()},this.login=function(d,i){return c.post(URLTo.api(g.login),{email:d,password:i}).then(function(b){return e.create(b.data,b.headers()[h]),a.$broadcast(f.loginSuccess,b),b})["catch"](function(c){return e.destroy(),a.$broadcast(f.loginFailed,c),b.reject(c)})},this.logout=function(){e.destroy(),a.$broadcast(f.logoutSuccess)},this.requestPasswordReset=function(a){return c.post(URLTo.api(g.requestPasswordReset),{email:a})},this.requestSignUpRegistration=function(a){return c.post(URLTo.api(g.requestSignUpRegistration),{email:a})},this.resetPasswordWithToken=function(a,b,d,e){return c.post(URLTo.api(g.resetPasswordWithToken,{":token":e}),{email:a,password:b,passwordConfirmation:d},{skipAuthorization:!0}).then(function(a){return a.data})},this.validatePasswordResetToken=function(a){return c.get(URLTo.api(g.validatePasswordResetToken,{":token":a}),{skipAuthorization:!0}).then(function(a){return a.data})},this.validateRegistrationToken=function(a){return c.get(URLTo.api(g.validateRegistrationToken,{":token":a}),{skipAuthorization:!0}).then(function(a){return a.data})},this.updatePassword=function(a,b,d){return c.post(URLTo.api(g.updatePassword),{oldPassword:a,newPassword:b,newPasswordConfirmation:d}).then(function(a){return a.data})},this.refreshToken=function(){return c.post(URLTo.api(g.refreshToken))}}]),angular.module("account").service("AuthFilter",["AuthService","StatesHandler",function(a,b){return function(c,d){"/account"===d.url&&a.isAuthenticated()?(c.preventDefault(),b.goToReminders()):"/profile"!==d.url&&"/reminders"!==d.url||a.isAuthenticated()||(c.preventDefault(),b.goToLogin())}}]),angular.module("account").factory("AuthInterceptor",["$rootScope","$q","SessionService","AUTH_EVENTS",function(a,b,c,d){return{responseError:function(c){return 401===c.status&&a.$broadcast(d.notAuthenticated,c),403===c.status&&a.$broadcast(d.notAuthorized,c),(419===c.status||440===c.status)&&a.$broadcast(d.sessionTimeout,c),b.reject(c)}}}]),angular.module("account").service("ProfileFormToggle",["ACCOUNT_FORM_STATE",function(a){this.state=a.updateProfile,this.setState=function(a){this.state=a}}]),angular.module("account").service("UserService",["$http","$q","USER_URLS",function(a,b,c){this.uniqueEmailCache={},this.isUnique=function(d){var e=b.defer();return _.isUndefined(this.uniqueEmailCache[d])?a.get(URLTo.api(c.userUnique),{params:{email:d}}).then(_.bind(function(a){this.uniqueEmailCache[d]=a.data.isUnique,e.resolve({isUnique:!0,email:d})},this))["catch"](function(a){e.resolve({isUnique:_.isEmpty(a.data&&a.data.errors),email:d})}):e.resolve({isUnique:this.uniqueEmailCache[d],email:d}),e.promise},this.resetUniqueEmailCache=function(){this.uniqueEmailCache={}}}]),angular.module("account").factory("User",["SessionService","TransformerUtils","$q","$http","AUTH_URLS",function(a,b,c,d,e){return{$new:function(){return{model:{userId:"",firstName:"",lastName:"",email:"",password:"",timezone:""},loadFromSession:function(){return b.copyKeysFromTo(a.getData()||{},this.model),this},saveToSession:function(){var c={};return b.copyKeysFromTo(this,c,["password"]),a.setData(c),this},$save:function(a){var c={};return b.copyKeysFromTo(a,c),this.updateAccount(c)
},$create:function(a){var c={};return b.copyKeysFromTo(a,c),this.createAccount(c)},$refresh:function(){var a=this;return this.retrieveDetails().then(function(c){return b.copyKeysFromTo(c.data,a),a.saveToSession(),c})["catch"](function(a){return c.reject(a)})},retrieveDetails:function(){return d.get(URLTo.api(e.details))},createAccount:function(a){return d.post(URLTo.api(e.create),a)},updateAccount:function(a){return d.post(URLTo.api(e.update),a)}}}}}]),angular.module("site",["ngAnimate","ui.router"]).config(["$stateProvider",function(a){a.state("home",{url:"/",templateUrl:"app/site/partials/home.html",controller:"RequestSignUpRegistrationCtrl",title:"Home - Reme.io"})}]),angular.module("site").controller("HomeCtrl",["$scope",function(){}]),angular.module("reminders",["ui.router","ui.bootstrap.transition","ui.bootstrap.datepicker","ui.bootstrap.dropdown","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.modal","ui.bootstrap.tabs","common","feedback"]).config(["$stateProvider",function(a){a.state("reminders",{url:"/reminders",views:{"":{templateUrl:"app/reminders/partials/reminder/reminders.html"},"create@reminders":{templateUrl:"app/reminders/partials/reminder/reminders.create.html",controller:"ReminderCtrl"},"list@reminders":{templateUrl:"app/reminders/partials/reminder/reminders.list.html",controller:"ReminderListCtrl",resolve:{reminderList:["$q","ReminderService",function(a,b){var c=a.defer();return b.getAllReminders().then(function(a){c.resolve(a)})["catch"](function(){c.resolve([])}),c.promise}]}}}})}]),angular.module("reminders").constant("REMINDER_URLS",{create:"reminders",update:"reminders/:reminderId",details:"reminders/:reminderId","delete":"reminders/:reminderId",allReminders:"reminders",pastReminders:"reminders/past?:local_time&:local_time_zone",upcomingReminders:"reminders/upcoming?:local_time&:local_time_zone"}).constant("REMINDER_EVENTS",{isCreated:"reminder-is-created",isDeleted:"reminder-is-deleted",isUpdated:"reminder-is-updated"}),angular.module("reminders").controller("ReminderCtrl",["$scope","ReminderModalService",function(a,b){a.cancel=function(){b.modalInstance.dismiss("cancel"),a.isOpen=!1},a.openReminderModalService=function(){b.open()}}]),angular.module("reminders").controller("ReminderDeleteModalCtrl",["$scope","$rootScope","$stateParams","$window","$","URLTo","ReminderDeleteModalService","reminder","$timeout","StatesHandler","REMINDER_EVENTS",function(a,b,c,d,e,f,g,h,i,j,k){a.reminder=h,a.isDeleting=!1,g.modalInstance.opened.then(function(){a.isOpen=!0}),a.deleteReminderAndClose=function(){a.isDeleting||(a.isDeleting=!0,a.reminder.destroy().then(function(){i(function(){g.modalInstance.close(),b.$broadcast(k.isDeleted,{reminder:a.reminder,message:"Reminder successfully deleted!"})},400)})["catch"](function(){a.isDeleting=!1,alert("Something went wrong. Please try again.")}))}}]),angular.module("reminders").controller("ReminderListCtrl",["$scope","reminderList","ReminderDeleteModalService","ReminderUpdateModalService","REMINDER_EVENTS","$log","flash",function(a,b,c,d,e,f,g){function h(){var a=new Date;return _.chain(b).groupBy(function(b){return b.model.dueOn<a}).toArray().value()}function i(a,b){_.remove(a,function(a){var c=_.parseInt(b.model.reminderId,10),d=_.parseInt(a.model.reminderId,10);return _.isNaN(d)||_.isNaN(c)?!1:d===c})}var j=h();a.upcomingReminders=j[0]||[],a.pastReminders=j[1]||[],a.openDeleteReminderModalService=function(a){c.open(a)},a.openUpdateReminderModalService=function(a){d.open(a)},a.$on(e.isCreated,function(b,c){g.success=c.message,c.reminder.model.dueOn>new Date?a.upcomingReminders.push(c.reminder):a.pastReminders.push(c.reminder)}),a.$on(e.isUpdated,function(a,b){g.success=b.message}),a.$on(e.isDeleted,function(b,c){g.success=c.message,i(a.upcomingReminders,c.reminder),i(a.pastReminders,c.reminder)})}]),angular.module("reminders").controller("ReminderModalCtrl",["$scope","$rootScope","$stateParams","$window","$","URLTo","ReminderModalService","ReminderUpdateModalService","reminder","$timeout","StatesHandler","REMINDER_EVENTS",function(a,b,c,d,e,f,g,h,i,j,k,l){a.reminder=i,a.isNew=a.reminder.isNew(),a.isSaving=!1;var m=["Pay rent @tomorrow at 3pm","Josh's birthday party @next Friday at 18:00","Christmas gifts @dec 20 at 3pm","Send email to Rachel @in 4 hours","Team meeting @10am","My brother's wedding next month @June 22"];a.randomExample=m[Math.floor(Math.random()*m.length)],a.saveReminder=function(c){c.$valid&&!a.isSaving&&(a.isSaving=!0,a.reminder.save().then(function(){a.isNew?j(function(){g.modalInstance.close(),b.$broadcast(l.isCreated,{reminder:a.reminder,message:"Reminder successfully saved!"})},400):j(function(){h.modalInstance.close(),b.$broadcast(l.isUpdated,{reminder:a.reminder,message:"Reminder successfully updated!"})},400)})["catch"](function(){a.isSaving=!1,alert("Something went wrong. Please try again.")}))}}]),angular.module("reminders").controller("ReminderSavedCtrl",["$rootScope","$scope","$state","FeedbackModal","reminder",function(a,b,c,d,e){a.$state=c,b.reminder=e,b.openFeedbackModal=function(){d.open()}}]),angular.module("reminders").directive("reminderList",function(){return{restrict:"A",scope:{reminders:"=",onUpdate:"&",onDelete:"&"},templateUrl:"app/reminders/partials/reminder/reminder.list.template.html",link:function(){}}}),angular.module("reminders").service("ReminderDeleteModalService",["$modal",function(a){this.modalInstance=null,this.open=function(b){this.modalInstance=a.open({templateUrl:"app/reminders/partials/reminderModal/reminderDeleteModal.html",controller:"ReminderDeleteModalCtrl",windowClass:"modal-feedback",resolve:{reminder:function(){return b}}})}}]),angular.module("reminders").service("ReminderModalService",["$modal",function(a){this.modalInstance=null,this.open=function(){this.modalInstance=a.open({templateUrl:"app/reminders/partials/reminderModal/reminderModal.html",controller:"ReminderModalCtrl",windowClass:"modal-feedback",resolve:{reminder:["$window","Reminder","jstz",function(a,b,c){var d=Date.create().addHours(1).set({minute:0,second:0});return b.build({text:"",dueOn:d,timezone:c.determine().name(),additionalAddresses:[]})}]}})}}]),angular.module("reminders").service("ReminderService",["REMINDER_URLS","$q","$http","$injector","ReminderTransformerService",function(a,b,c,d,e){this.createReminder=function(b){return c.post(URLTo.api(a.create),e.toReminderDto(b)).then(function(a){return e.toReminder(a.data,b),a})},this.updateReminder=function(b){var d=e.toReminderDto(b);return c.put(URLTo.api(a.update,{":reminderId":d.reminderId}),d).then(function(a){return e.toReminder(a.data,b),a})},this.deleteReminder=function(b){var d=e.toReminderDto(b);return c["delete"](URLTo.api(a["delete"],{":reminderId":d.reminderId}),d).then(function(a){return e.toReminder(a.data,b),a.data})},this.getAllReminders=function(){return c.get(URLTo.api(a.allReminders)).then(function(a){return e.toReminders(a.data)})["catch"](function(a){return b.reject(a)})},this.getDetails=function(b,f){return c.get(URLTo.api(a.details,{":reminderId":b})).then(function(a){return e.toReminder(a.data,f||d.get("Reminder").build())})}}]),angular.module("reminders").service("ReminderTransformerService",["$injector","TransformerUtils",function(a,b){this.toReminderDto=function(a,c){var d={};return b.copyKeysFromTo(a.model,d,c),d.dueOn&&(d.dueOn=d.dueOn.format("{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}")),d.additionalAddresses=d.additionalAddresses.join(","),d.text=$.trim(d.text.split("@")[0]),d},this.toReminder=function(c,d,e){d=d||a.get("Reminder").build(),b.copyKeysFromTo(c,d.model,e),d.model.dueOn&&(d.model.dueOn=moment(d.model.dueOn).toDate());var f=d.model.additionalAddresses;return d.model.additionalAddresses=_.isEmpty(f)?[]:_.isArray(f)?f:_.values(f.split(",")),d},this.toReminders=function(a){var b=[];return _.each(a,_.bind(function(a){b.push(this.toReminder(a))},this)),b}}]),angular.module("reminders").service("ReminderUpdateModalService",["$modal",function(a){this.modalInstance=null,this.open=function(b){this.modalInstance=a.open({templateUrl:"app/reminders/partials/reminderModal/reminderModal.html",controller:"ReminderModalCtrl",windowClass:"modal-feedback",resolve:{reminder:function(){return b}}})}}]),angular.module("reminders").factory("Reminder",["$q","$http","ReminderService","ReminderTransformerService",function(a,b,c,d){function e(){this.model={reminderId:"",text:"",dueOn:"",timezone:"",additionalAddresses:[],createdBy:"",sent:"",createdAt:"",updatedAt:""},this.isNew=function(){return""===this.model.reminderId||_.isUndefined(this.model.reminderId)},this.save=function(){return this.isNew()?c.createReminder(this):c.updateReminder(this)},this.fetch=function(a){return c.getDetails(a)},this.destroy=function(){return c.deleteReminder(this)}}return e.build=function(a){return _.isEmpty(a)?new e:d.toReminder(a,new e)},e}]),angular.module("feedback",[]),angular.module("feedback").controller("FeedbackModalCtrl",["$scope","$timeout","FeedbackModal","FeedbackMessage",function(a,b,c,d){a.isSending=!1,a.isSent=!1,a.feedbackMessage=new d,c.modalInstance.opened.then($.proxy(function(){a.isOpen=!0},this)),a.sendAndClose=function(d){d.$valid&&!a.isSending?(a.isSending=!0,a.feedbackMessage.send().then(function(){a.isSent=!0,b(function(){c.modalInstance.close()},2500)})["finally"](function(){a.isSending=!1,a.isOpen=!1})):d.submitted=!0},a.cancel=function(){c.modalInstance.dismiss("cancel"),a.isOpen=!1}}]),angular.module("feedback").factory("FeedbackMessage",["$http","$q","URLTo",function(a,b,c){function d(){this.urlRoot="feedback",this.attributes={},this.send=function(){var d=b.defer();return a({method:"POST",url:c.api(this.urlRoot),data:this.attributes}).success(function(){d.resolve()}).error(function(a){d.reject(a)}),d.promise}}return d}]),angular.module("feedback").service("FeedbackModal",["$modal",function(a){this.modalInstance=null,this.open=function(){this.modalInstance=a.open({templateUrl:"app/feedback/partials/feedbackModal/feedbackModal.html",controller:"FeedbackModalCtrl",windowClass:"modal-feedback"})}}]),angular.module("app",["ngAnimate","ngMessages","ui.router","angular-flash.service","angular-flash.flash-alert-directive","ngCookies","partials","site","common","feedback","reminders","account"]).config(["$locationProvider","flashProvider",function(a,b){a.html5Mode({enabled:!0,requireBase:!1}),b.successClassnames.push("alert-reme"),b.errorClassnames.push("alert-reme"),b.infoClassnames.push("alert-reme"),b.warnClassnames.push("alert-reme")}]).run(function(){URLTo.apiBase("http://beta-api.reme.io")}),angular.module("app").controller("AppCtrl",["AUTH_EVENTS","$rootScope","$scope","$state","$log","AuthService","User","StatesHandler",function(a,b,c,d,e,f,g){b.$state=d,b.currentUser=g.$new().loadFromSession(),e.log("Current user: ",b.currentUser),c.$on(a.loginSuccess,function(){b.currentUser=g.$new().loadFromSession(),e.log("Logged in: ",b.currentUser)}),c.$on(a.sessionTimeout,function(){e.log("Session timed out."),f.logout()}),c.$on(a.notAuthenticated,function(){e.log("Not authenticated."),f.logout()}),c.$on(a.logoutSuccess,function(){b.currentUser=g.$new(),e.log("Logged out.")}),b.$on("$stateChangeStart",function(a,b,c){e.log("$stateChangeStart to "+b.to+"- fired when the transition begins. toState,toParams : \n",b,c)}),b.$on("$stateChangeError",function(){e.log("$stateChangeError - fired when an error occurs during transition."),e.log(arguments)}),b.$on("$stateChangeSuccess",function(a,b){e.log("$stateChangeSuccess to "+b.name+"- fired once the state transition is complete.")}),b.$on("$viewContentLoaded",function(a){e.log("$viewContentLoaded - fired after dom rendered",a)}),b.$on("$stateNotFound",function(a,b,c,d){e.log("$stateNotFound "+b.to+"  - fired when a state cannot be found by its name."),e.log(b,c,d)})}]),angular.module("partials",["app/site/partials/home.html","app/reminders/partials/privacy.html","app/reminders/partials/reminder/reminder.list.template.html","app/reminders/partials/reminder/reminders.create.html","app/reminders/partials/reminder/reminders.html","app/reminders/partials/reminder/reminders.list.html","app/reminders/partials/reminderModal/reminderDeleteModal.html","app/reminders/partials/reminderModal/reminderModal.html","app/feedback/partials/feedbackModal/feedbackModal.html","app/account/partials/account.html","app/account/partials/logout.html","app/account/partials/profile.html","app/account/partials/signup_confirm_abstract.html","app/account/partials/signup_confirm_invalid.html","app/account/partials/signup_confirm_valid.html","app/account/partials/validate_password_reset_token.html","app/account/partials/validate_password_reset_token_abstract.html","app/account/partials/validate_password_reset_token_invalid.html","app/account/partials/validate_password_reset_token_valid.html","app/common/partials/emailList/emailList.html","app/common/partials/header-home.html","app/common/partials/header.html","app/common/partials/timepickerPopup/timepickerPopup.html","template/datepicker/datepicker.html","template/datepicker/popup.html","template/modal/backdrop.html","template/modal/window.html","template/popover/popover.html","template/tabs/tab.html","template/tabs/tabset.html","template/tooltip/tooltip-html-unsafe-popup.html","template/tooltip/tooltip-popup.html"]),angular.module("app/site/partials/home.html",[]).run(["$templateCache",function(a){a.put("app/site/partials/home.html",'<div header-home></div>\n\n<div class="home">\n\n    <div class="home__signup">\n        <div class="centered-section-home">\n\n            <h1>Create email reminders in seconds!</h1>\n\n            <h3>O fraza de doua propozitii despre ce face Reme va fi aici. O fraza de doua propozitii despre ce face\n                Reme va fi aici.</h3>\n\n            <!-- Register  section -->\n            <div class="home__signup__form account__sections account__sections--request-registration" account-form-toggle>\n\n                <!-- Request registration section -->\n                <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.requestSignUpRegistration" ng-controller="RequestSignUpRegistrationCtrl">\n\n                    <!-- Request registration form -->\n                    <form name="requestSignUpRegistrationForm" class="form-inline" ng-submit="requestSignUpRegistration(requestSignUpRegistrationData.email)" novalidate focus-first-error-on-submit>\n\n                        <!-- Account controls -->\n                        <div class="account__controls">\n\n                            <!-- General error -->\n                            <div class="alert alert-info" ng-if="isRequestPasswordErrorOcurred">\n                                Sorry, we encountered a problem.\n                            </div>\n\n                            <!-- Form group -->\n                            <div class="form-group" ng-class="{\'has-error\': requestSignUpRegistrationForm.email.$invalid && requestSignUpRegistrationForm.$submitted}">\n                                <input class="form-control form-control--account" type="email" placeholder="Email address"\n                                       name="email" ng-model="signUpData.email" ng-model-options="{ debounce: 800 }" required\n                                       valid-email unique-email />\n                            </div>\n\n                            <!-- Button container -->\n                            <button class="btn request--registration" type="submit">Get started now!</button>\n                        </div>\n\n                        <div class="help-block help-block--request-registration" ng-class="{\'has-error\': requestSignUpRegistrationForm.email.$invalid && requestSignUpRegistrationForm.$submitted}" ng-messages="requestSignUpRegistrationForm.email.$error" ng-if="requestSignUpRegistrationForm.$submitted">\n                            <div ng-message="required">Your email address is mandatory.</div>\n                            <div ng-message="validEmail">This email address is not valid.</div>\n                            <div ng-message="uniqueEmail">This email address is already used.</div>\n                        </div>\n                        <div class="help-block" ng-if="requestSignUpRegistrationForm.email.$pending">\n                            Checking availability...\n                        </div>\n                    </form>\n                </div>\n\n                <!-- Request registration email sent section -->\n                <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.requestSignUpRegistrationEmailSent">\n\n                    <!-- Title -->\n                    <h1 class="account__title">Email has been sent!</h1>\n\n                    <!-- Explain -->\n                    <span class="account__explain">\n                        We\'ve sent you an email with the instructions on how to reset your password.\n                    </span>\n\n                    <!-- Button container -->\n                    <a href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Continue</a>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n\n    <div class="home__testimonials">\n        <div class="centered-section-home">\n            TESTIMONIALS\n        </div>\n    </div>\n\n\n</div>\n\n<!--<div footer-home></div>-->\n\n')}]),angular.module("app/reminders/partials/privacy.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/privacy.html",'<div class="privacy-container">\n\n    <h1>Terms and Privacy Policy</h1>\n\n    <div>\n        <section>\n            <h3>General Terms</h3>\n            <ul>\n                <li>\n                    Reme.IO is a tool created in the sole purpose of helping people get organized by creating\n                    reminders which will be sent to the provided e-mail address(es) at a specific date and time.\n                    Reme.IO is not responsible for the content entered by the user.\n                </li>\n                <li>\n                    Reme.IO uses e-mail as the only notification method. Reme.IO is not responsible for missed\n                    dead-lines, appointments or other time-critical events.\n                </li>\n            </ul>\n        </section>\n\n        <section>\n            <h3>Privacy Policy</h3>\n            <ul>\n                <li>\n                    The information Reme.IO stores is the subject of the reminder and the e-mail address(es)\n                    the user enters for the reminder recipient.\n                </li>\n                <li>\n                    We use local storage to save reminder related data for better user-experience. We do not\n                    collect anonymous data of any kind.\n                </li>\n                <li>\n                    The only e-mail Reme.IO will send to the provided address(es) will be the reminder which\n                    the user creates.\n                </li>\n                <li>\n                    We will not use your e-mail address to send any newsletters, advertising or any other kind\n                    of spam.\n                </li>\n                <li>\n                    We will not share your e-mail address with 3rd party entities.\n                </li>\n            </ul>\n        </section>\n\n        <section>\n            <div>\n                Please feel free to contact us at <a href="mailto:hello@reme.io">hello@reme.io</a> for any\n                questions or concerns you may have regarding the privacy policy.\n            </div>\n        </section>\n    </div>\n</div>\n\n')}]),angular.module("app/reminders/partials/reminder/reminder.list.template.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminder/reminder.list.template.html",'<!--Reminder list is empty-->\n<span ng-if="reminders.length === 0">You don\'t have any reminders defined.</span>\n\n<!--Reminder list-->\n<div class="reminder" ng-repeat="reminder in reminders | orderObjectBy : \'dueOn\' : true">\n    <div class="reminder__title">\n        {{reminder.model.text}}\n    </div>\n    <div class="reminder__info">\n        <div class="reminder__info__item reminder__info__item--date">\n            <span class="icon-calendar"></span>\n            {{reminder.model.dueOn | friendlyDate}}\n        </div>\n        <div class="reminder__info__item reminder__info__item--recurring">\n            <span class="icon-recurring"></span>\n            Every week on Monday\n        </div>\n        <div class="reminder__info__item reminder__info__item--time">\n            <span class="icon-clock"></span>\n            {{reminder.model.dueOn | friendlyHour}}\n        </div>\n    </div>\n\n    <div class="reminder__menu">\n        <a class="reminder__menu__option" href="#" ng-click="onUpdate({reminder: reminder})"><span\n                class="icon-pencil"></span></a>\n        <a class="reminder__menu__option reminder__menu__option--complete" href="#"><span\n                class="icon-checkmark"></span></a>\n        <a class="reminder__menu__option" href="#" ng-click="onDelete({reminder: reminder})"><span\n                class="icon-trash"></span></a>\n    </div>\n\n</div>')}]),angular.module("app/reminders/partials/reminder/reminders.create.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminder/reminders.create.html",'<div class="reminders__header">\n    <a class="btn-outline reminders__header__btn" href="#" ng-click="openReminderModalService()">Create reminder</a>\n</div>')}]),angular.module("app/reminders/partials/reminder/reminders.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminder/reminders.html",'<div header></div>\n\n<div ui-view="create"></div>\n\n<div ui-view="list"></div>')}]),angular.module("app/reminders/partials/reminder/reminders.list.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminder/reminders.list.html",'<div class="centered-section-reminders">\n\n    <!-- Subscribe to success flash messages. -->\n    <div flash-alert="success" active-class="in" class="alert fade">\n        <strong class="alert-heading">Congrats!</strong>\n        <span class="alert-message">{{flash.message}}</span>\n    </div>\n\n    <tabset>\n        <tab heading="Upcoming reminders">\n            <div reminder-list reminders="upcomingReminders" on-update="openUpdateReminderModalService(reminder)"\n                 on-delete="openDeleteReminderModalService(reminder)"></div>\n        </tab>\n\n        <tab heading="Past reminders">\n            <div reminder-list reminders="pastReminders" on-update="openUpdateReminderModalService(reminder)"\n                 on-delete="openDeleteReminderModalService(reminder)"></div>\n        </tab>\n    </tabset>\n\n</div>')}]),angular.module("app/reminders/partials/reminderModal/reminderDeleteModal.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminderModal/reminderDeleteModal.html",'<!--Reminder form-->\n<div ng-show="! isDeleting" class="reminder-form-container">\n\n    <div class="reminder-form container box">\n        Are you sure you want to delete reminder with text <strong>{{reminder.model.text}}</strong> and with reminder id <strong>{{reminder.model.reminderId}}</strong>?\n        <br />\n        <a href="#" class="btn-outline reminders__header__btn" ng-click="deleteReminderAndClose(reminder)">Delete reminder</a>\n    </div>\n\n</div>\n\n<!--While saving-->\n<div class="reminder--saving" ng-show="isDeleting">Deleting reminder..</div>')}]),angular.module("app/reminders/partials/reminderModal/reminderModal.html",[]).run(["$templateCache",function(a){a.put("app/reminders/partials/reminderModal/reminderModal.html",'<!--Reminder form-->\n<div ng-show="! isSaving" class="reminder-modal">\n    <form class="reminder-modal__form" name="reminderForm" ng-submit="saveReminder(reminderForm)" novalidate\n          focus-first-error>\n\n        <!--Reminder text-->\n        <div class="form-group" ng-class="{\'has-error\': reminderForm.text.$invalid && reminderForm.$submitted}">\n            <label>Remind me to:</label>\n            <input class="form-control form-control--reminder" type="text" placeholder="e.g. {{randomExample}}"\n                   name="text" maxlength="140" ng-model="reminder.model.text" nlp-date date="reminder.model.dueOn"\n                   separator="@" min-date="2014-01-01" max-date="2018-01-01" prefer="future" auto-focus required/>\n        </div>\n\n        <div class="reminder-modal__form__info">\n            <!--Reminder date picker-->\n            <div class="reminder-modal__form__info--date">\n                <button type="button" class="btn btn--reminder-popup" datepicker-popup ng-model="reminder.model.dueOn"\n                        show-weeks="false" datepicker-options="{starting_day:1}" animate animate-on="nlpDate:dateChange"\n                        animate-class="animated highlight-button">\n                    {{reminder.model.dueOn | friendlyDate}}\n                </button>\n            </div>\n\n            <!--Reminder time picker-->\n            <div class="reminder-modal__form__info--time" timepicker-popup dropdown ng-model="reminder.model.dueOn" step="30"></div>\n        </div>\n\n        <!--Reminder addresses-->\n        <div class="reminder-modal__form__addressees">\n            <div class="form-group">\n                <div class="form-control form-control--user-email">{{currentUser.model.email}}\n                </div>\n            </div>\n\n            <div email-list ng-model="reminder.model.additionalAddresses" max-emails="5" parent-form="reminderForm"></div>\n        </div>\n\n        <!--Submit form button-->\n        <button type="submit" class="btn btn--create-reminder">{{isNew ? "Create reminder" : "Update\n            reminder"}}\n        </button>\n\n    </form>\n</div>\n\n<!--While saving-->\n<div class="reminder--saving" ng-show="isSaving">{{isNew ? "Saving reminder" : "Updating reminder"}}</div>')}]),angular.module("app/feedback/partials/feedbackModal/feedbackModal.html",[]).run(["$templateCache",function(a){a.put("app/feedback/partials/feedbackModal/feedbackModal.html",'<form name="feedbackForm" ng-submit="sendAndClose(feedbackForm)" novalidate focus-first-error>\n\n    <div class="modal-header">\n        <h3>Feedback</h3>\n    </div>\n\n\n    <div class="modal-body" ng-if="! isSending && ! isSent">\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.name.$invalid && feedbackForm.submitted}">\n            <input class="form-control" type="text" name="name" ng-model="feedbackMessage.attributes.name" placeholder="Your name" required auto-focus="isOpen" />\n        </div>\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.email.$invalid && feedbackForm.submitted}">\n            <input class="form-control" type="email" name="email" ng-model="feedbackMessage.attributes.email" placeholder="Your email address" required />\n        </div>\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.subject.$invalid && feedbackForm.submitted}">\n            <input class="form-control" type="text" name="subject" ng-model="feedbackMessage.attributes.subject" placeholder="Subject" required />\n        </div>\n        <div class="form-group" ng-class="{\'has-error\': feedbackForm.message.$invalid && feedbackForm.submitted}">\n            <textarea class="form-control" rows="6" name="message" ng-model="feedbackMessage.attributes.message" placeholder="Your message" required></textarea>\n        </div>\n    </div>\n\n    <div class="modal-body" ng-if="isSending">\n        <div class="sending-status">Sending your message..</div>\n    </div>\n\n\n    <div class="modal-body" ng-if="isSent">\n        <div class="sending-status">Thank you! You are awesome.</div>\n    </div>\n\n\n    <div class="modal-footer">\n        <button class="btn btn-link" type="button" ng-click="cancel()">Cancel</button>\n        <button class="btn btn-primary" type="submit" ng-disabled="isSending || isSent">Send</button>\n    </div>\n</form>')}]),angular.module("app/account/partials/account.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/account.html",'<!-- Account sections -->\n<div class="account__sections" account-form-toggle>\n\n    <!--Sign in-->\n    <div class="account__section" ng-if="AccountFormToggle.state === ACCOUNT_FORM_STATE.login" ng-controller="LoginCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Welcome!</h1>\n\n        <!-- Login form -->\n        <form name="loginForm" ng-submit="login(loginData)" novalidate>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                <!-- General error -->\n                <div class="alert alert-danger" ng-if="isAuthenticationErrorOcurred">Your email or password are wrong. Please try again.</div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isAuthenticationErrorOcurred || ( loginForm.email.$invalid && loginForm.$submitted )}">\n                        <input class="form-control form-control--account" type="email" placeholder="email" name="email"\n                               ng-model="loginData.email" required/>\n                        <div class="help-block" ng-if="loginForm.$submitted">\n                            <div ng-if="loginForm.email.$error.required">Your email address is mandatory.</div>\n                        </div>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isAuthenticationErrorOcurred || ( loginForm.password.$invalid && loginForm.$submitted )}">\n                        <input class="form-control form-control--account" type="password" placeholder="password"\n                               name="password" ng-model="loginData.password" required/>\n                        <div class="help-block" ng-if="loginForm.$submitted">\n                            <div ng-if="loginForm.password.$error.required">Your password is mandatory.</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Reset password -->\n                <div class="form-group">\n                    <a class="link-secondary" href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.forgotPassword)">Forgot login details?</a>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Sign in</button>\n            </div>\n        </form>\n\n        <a class="link-primary" href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.requestSignUpRegistration)">Don\'t have an account yet? Sign up!</a>\n\n    </div>\n\n    <!--Sign up-->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.requestSignUpRegistration" ng-controller="RequestSignUpRegistrationCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Get started!</h1>\n\n        <!-- Sign-up form -->\n        <form name="requestSignUpRegistrationForm" ng-submit="requestSignUpRegistration(requestSignUpRegistrationData)" novalidate focus-first-error-on-submit>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n               <!-- General error -->\n                <div class="alert alert-danger" ng-if="isRequestSignUpRegistrationErrorOcurred">\n                    We encountered a problem.\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': requestSignUpRegistrationForm.email.$invalid && requestSignUpRegistrationForm.$submitted}">\n                        <input class="form-control form-control--account" type="email" placeholder="Your email address"\n                               name="email" ng-model="requestSignUpRegistrationData.email" ng-model-options="{ debounce: 800 }" required\n                               valid-email unique-email/>\n\n                        <div class="help-block" ng-messages="requestSignUpRegistrationForm.email.$error" ng-if="requestSignUpRegistrationForm.$submitted">\n                            <div ng-message="required">Your email address is mandatory.</div>\n                            <div ng-message="validEmail">This email address is not valid.</div>\n                            <div ng-message="uniqueEmail">This email address is already used.</div>\n                        </div>\n                        <div class="help-block" ng-if="requestSignUpRegistrationForm.email.$pending">\n                            Checking availability...\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Create new account</button>\n            </div>\n        </form>\n\n         <a class="link-primary" href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Already have an account? Sign in here!</a>\n\n    </div>\n\n    <!-- Sign up email sent section -->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.requestSignUpRegistrationEmailSent">\n\n        <!-- Title -->\n        <h1 class="account__title">Email has been sent!</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">\n            We\'ve sent you an email with the instructions on how to confirm your registration.\n        </span>\n\n        <!-- Button container -->\n        <a href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Continue</a>\n    </div>\n\n    <!-- Recover password section -->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.forgotPassword" ng-controller="ForgotPasswordCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Can\'t remember your password?</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">\n            Enter below the e-mail you use to log in. <br />\n            We\'ll send you instructions on how to reset your password.\n        </span>\n\n        <!-- Forgot password form -->\n        <form name="forgotPasswordForm" ng-submit="requestPasswordReset(forgotPasswordData.email)" novalidate focus-first-error-on-submit>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                  <!-- General error -->\n                <div class="alert alert-info" ng-if="isRequestPasswordErrorOcurred">\n                     <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': forgotPasswordForm.email.$invalid && forgotPasswordForm.$submitted }">\n                        <input class="form-control form-control--account" type="email" placeholder="Your email address"\n                               name="email" ng-model="forgotPasswordData.email" required valid-email/>\n                        <div class="help-block" ng-messages="forgotPasswordForm.email.$error" ng-if="forgotPasswordForm.$submitted">\n                            <div ng-message="required">Your email address is mandatory.</div>\n                            <div ng-message="validEmail">This email address is not valid.</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Reset password</button>\n            </div>\n        </form>\n\n        <a href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Nevermind, take me back!</a>\n    </div>\n\n    <!-- Password recovery email sent section -->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.forgotPasswordEmailSent">\n\n        <!-- Title -->\n        <h1 class="account__title">Email has been sent!</h1>\n\n        <!-- Explain -->\n            <span class="account__explain">\n                We\'ve sent you an email with the instructions on how to reset your password.\n            </span>\n\n        <!-- Button container -->\n        <a href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Continue</a>\n    </div>\n\n</div>')
}]),angular.module("app/account/partials/logout.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/logout.html",'<!-- Account sections -->\n<div class="account__sections">\n\n   <!-- Logout section -->\n    <div class="account__section">\n\n        <!-- Account controls -->\n        <div class="account__controls">\n\n             <!--Message-->\n            <div class="alert alert-success">\n               We\'ve successfully logged you out.\n            </div>\n        </div>\n    </div>\n</div>\n\n')}]),angular.module("app/account/partials/profile.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/profile.html",'<!-- Account sections -->\n<div class="account__sections" profile-form-toggle>\n\n    <!-- Profile section -->\n    <div class="account__section" ng-if="ProfileFormToggle.state === ACCOUNT_FORM_STATE.updateProfile" ng-controller="ProfileCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Modify profile</h1>\n\n        <!-- Profile form -->\n        <form name="profileForm" ng-submit="updateProfile(profileData)" novalidate>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                 <!--Successfully message-->\n                <div class="alert alert-success" ng-if="isProfileUpdated">\n                   We\'ve successfully updated your account.\n                </div>\n\n                <!-- General error -->\n                <div class="alert alert-danger" ng-if="errorMessages && !isProfileUpdated">\n                   <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': profileForm.firstName.$invalid && profileForm.$submitted}">\n                        <input class="form-control form-control--account" type="text" placeholder="Prenume"\n                               name="firstName" ng-model="profileData.firstName" required/>\n                        <span class="help-block" ng-if="profileForm.firstName.$invalid && profileForm.$submitted">Please tell us your First Name.</span>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': profileForm.lastName.$invalid && profileForm.$submitted}">\n                        <input class="form-control form-control--account" type="text" placeholder="Nume" name="lastName"\n                               ng-model="profileData.lastName" required/>\n                        <span class="help-block" ng-if="profileForm.lastName.$invalid && profileForm.$submitted">Please tell us your Last Name.</span>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': profileForm.email.$invalid && profileForm.$submitted}">\n                        <input class="form-control form-control--account" type="text" placeholder="Email" name="email"\n                               ng-model="profileData.email" required/>\n                        <span class="help-block" ng-if="profileForm.email.$invalid && profileForm.$submitted">Please tell us your email.</span>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">SAVE</button>\n            </div>\n        </form>\n\n        <a href="#" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updatePassword)">Change password.</a>\n        <br />\n        <br />\n        <a href="#" ng-click="getMeBack()">{{profileForm.updated ? \'Ok, get me back.\' : \'Nevermind.\'}}</a>\n    </div>\n\n    <!-- Update password section -->\n    <div class="account__section" ng-if="ProfileFormToggle.state === ACCOUNT_FORM_STATE.updatePassword" ng-controller="UpdatePasswordCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Welcome!</h1>\n\n        <!-- Update password form -->\n        <form name="updatePasswordForm" ng-submit="updatePassword(updatePasswordData)" novalidate>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                <!-- General error -->\n                <div class="alert alert-danger" ng-if="isUpdatePasswordErrorOcurred">\n                     <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isUpdatePasswordErrorOcurred || (updatePasswordForm.oldPassword.$invalid && updatePasswordForm.$submitted)}">\n                        <input class="form-control form-control--account" type="password" placeholder="Old password"\n                               name="oldPassword" ng-model="updatePasswordData.oldPassword" required/>\n                        <span class="help-block" ng-if="updatePasswordForm.oldPassword.$invalid && updatePasswordForm.$submitted">Your old password is mandatory.</span>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isUpdatePasswordErrorOcurred || (updatePasswordForm.newPassword.$invalid && updatePasswordForm.$submitted)}">\n                        <input class="form-control form-control--account" type="password" placeholder="New password"\n                               name="newPassword" ng-model="updatePasswordData.newPassword" required/>\n                        <span class="help-block" ng-if="updatePasswordForm.newPassword.$invalid && updatePasswordForm.$submitted">Your confirm password is mandatory.</span>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isUpdatePasswordErrorOcurred || (updatePasswordForm.newPasswordConfirmation.$invalid && updatePasswordForm.$submitted)}">\n                        <input class="form-control form-control--account" type="password"\n                               placeholder="New password confirmation" name="newPasswordConfirmation"\n                               ng-model="updatePasswordData.newPasswordConfirmation" required/>\n                        <span class="help-block" ng-if="updatePasswordForm.newPasswordConfirmation.$invalid && updatePasswordForm.$submitted">Your confirm password is mandatory.</span>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Update password</button>\n            </div>\n        </form>\n\n        <a href="#" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updateProfile)">Nevermind, take me back!</a>\n\n    </div>\n\n    <!-- Change password section successfully-->\n    <div class="account__section" ng-if="ProfileFormToggle.state == ACCOUNT_FORM_STATE.updatePasswordSuccessfully">\n\n        <!-- Title -->\n        <h1 class="account__title">Successfully</h1>\n\n        <!-- Explain -->\n            <span class="account__explain">\n                We\'ve successfully updated your new password.\n            </span>\n\n        <!-- Button container -->\n        <a href="#" ng-click="ProfileFormToggle.setState(ACCOUNT_FORM_STATE.updateProfile)">Continue</a>\n    </div>\n\n</div>')}]),angular.module("app/account/partials/signup_confirm_abstract.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_abstract.html",'<!--Validate password reset token section - abstract view-->\n<div class="account__sections">\n\n    <div ui-view></div>\n\n</div>')}]),angular.module("app/account/partials/signup_confirm_invalid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_invalid.html",'<!-- Registration confirmation invalid -->\n<div class="account__section">\n\n    <!-- Explain -->\n    <span class="account__explain">\n        We couldn\'t do it.\n    </span>\n</div>')}]),angular.module("app/account/partials/signup_confirm_valid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/signup_confirm_valid.html",'<!-- Registration confirmation valid -->\n\n<!-- Account sections -->\n<div class="account__sections" account-form-toggle>\n\n    <!--Sign up-->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.signUp" ng-controller="SignUpConfirmCtrl">\n\n        <!-- Title -->\n        <h1 class="account__title">Get started with registration confirmation!</h1>\n\n        <!-- Sign-up form -->\n        <form name="signUpForm" ng-submit="signUp(signUpData)" novalidate focus-first-error-on-submit>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                <!-- General error -->\n                <div class="alert alert-danger" ng-if="isSignUpErrorOcurred">\n                    <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="form-group" ng-class="{\'has-error\': signUpForm.firstName.$invalid && signUpForm.$submitted}">\n                    <input class="form-control form-control--account" type="text" placeholder="First Name"\n                           name="firstName" ng-model="signUpData.firstName" required />\n                    <span class="help-block" ng-if="signUpForm.firstName.$invalid && signUpForm.$submitted">Please tell us your First Name.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': signUpForm.lastName.$invalid && signUpForm.$submitted}">\n                    <input class="form-control form-control--account" type="text" placeholder="Last Name"\n                           name="lastName" ng-model="signUpData.lastName" required />\n                    <span class="help-block" ng-if="signUpForm.lastName.$invalid && signUpForm.$submitted">Please tell us your Last Name.</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': signUpForm.email.$invalid && signUpForm.$submitted}">\n                        <div class="form-control form-control--account">{{signUpData.email}}</div>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': signUpForm.password.$invalid && signUpForm.$submitted}">\n                        <input class="form-control form-control--account" type="password"\n                               placeholder="Choose a password" name="password" ng-model="signUpData.password" required\n                               strong-password />\n\n                        <div class="help-block" ng-messages="signUpForm.password.$error" ng-if="signUpForm.$submitted">\n                            <div ng-message="required">Please choose a password.</div>\n                            <div ng-message="strongPassword">Your password needs to be at least 7 characters long.</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Create new account</button>\n            </div>\n        </form>\n\n    </div>\n\n    <!-- Sign up email sent section -->\n    <div class="account__section" ng-if="AccountFormToggle.state == ACCOUNT_FORM_STATE.signUpSuccessfully">\n\n        <!-- Title -->\n        <h1 class="account__title">Email has been sent!</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">\n            We\'ve sent you an email with the instructions on how to confirm your registration.\n        </span>\n\n        <!-- Button container -->\n        <a href="#" ng-click="AccountFormToggle.setState(ACCOUNT_FORM_STATE.login)">Continue</a>\n    </div>\n\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token.html",'<!-- Account sections -->\n<div class="account__sections">\n\n      <!-- Validated token result -->\n    <div class="alert alert-danger" ng-if="errorMessages && !isTokenValid">\n       <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n\n        <br />\n        <br />\n\n        <!-- Button container -->\n        <a href="#" ng-click="continueToResetPassword()">Let me try again.</a>\n        <br />\n        <span ng-if="isUserAuthenticated">\n            You are authenticated. You will be logged off if you want to try again.\n        </span>\n    </div>\n\n    <!-- Validate password reset token section -->\n    <div class="account__section" ng-hide="!isTokenValid || successfullyReseted">\n\n        <!-- Title -->\n         <h1 class="account__title">Reset your password.</h1>\n\n        <!-- Reset password form -->\n        <form name="resetPasswordForm" ng-submit="resetPassword(resetPasswordData)" novalidate>\n\n            <!-- Account controls -->\n            <div class="account__controls">\n\n                <!-- General error -->\n                <div class="alert alert-danger" ng-if="isResetPasswordErrorOcurred">\n                     <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n                </div>\n\n                <!-- Form groups -->\n                <div class="account__controls__form-groups--last">\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isResetPasswordErrorOcurred || (resetPasswordForm.password.$invalid && resetPasswordForm.$submitted)}">\n                        <input class="form-control form-control--account" type="password" placeholder="New password"\n                               name="password" ng-model="resetPasswordData.password" required/>\n                        <span class="help-block" ng-if="resetPasswordForm.password.$invalid && resetPasswordForm.$submitted">Your new password is mandatory.</span>\n                    </div>\n\n                    <!-- Form group -->\n                    <div class="form-group" ng-class="{\'has-error\': isResetPasswordErrorOcurred || (resetPasswordForm.passwordConfirmation.$invalid && resetPasswordForm.$submitted)}">\n                        <input class="form-control form-control--account" type="password"\n                               placeholder="New password confirmation" name="passwordConfirmation"\n                               ng-model="resetPasswordData.passwordConfirmation" required/>\n                        <span class="help-block" ng-if="resetPasswordForm.passwordConfirmation.$invalid && resetPasswordForm.$submitted">Your confirm password is mandatory.</span>\n                    </div>\n                </div>\n\n                <!-- Button container -->\n                <button class="btn account__button" type="submit">Reset password</button>\n            </div>\n        </form>\n\n    </div>\n\n    <!-- Change password section successfully-->\n    <div class="account__section" ng-hide="!successfullyReseted">\n\n        <!-- Title -->\n        <h1 class="account__title">Successfully</h1>\n\n        <!-- Explain -->\n        <span class="account__explain">\n            We\'ve successfully updated your new password.\n        </span>\n    </div>\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token_abstract.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_abstract.html",'<!--Validate password reset token section - abstract view-->\n<div class="account__sections">\n\n    <div ui-view></div>\n\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token_invalid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_invalid.html",'<!-- Invalid token result view -->\n<div class="alert alert-danger">\n    The token is invalid or expired.\n    <br />\n    <br />\n\n    <!-- Button container -->\n    <a href="#" ng-click="continueToResetPassword()">Let me try again.</a>\n    <br />\n    <span ng-if="isUserAuthenticated">\n        You are authenticated. You will be logged off if you want to try again.\n    </span>\n</div>')}]),angular.module("app/account/partials/validate_password_reset_token_valid.html",[]).run(["$templateCache",function(a){a.put("app/account/partials/validate_password_reset_token_valid.html",'<!-- Valid token view -->\n<div class="account__section" ng-hide="successfullyReseted">\n\n    <!-- Title -->\n     <h1 class="account__title">Reset your password.</h1>\n\n    <!-- Reset password form -->\n    <form name="resetPasswordForm" ng-submit="resetPassword(resetPasswordData)" novalidate>\n\n        <!-- Account controls -->\n        <div class="account__controls">\n\n            <!-- General error -->\n            <div class="alert alert-danger" ng-if="isResetPasswordErrorOcurred">\n                 <span ng-repeat="errorMessage in errorMessages">{{errorMessage}}</span>\n            </div>\n\n            <!-- Form groups -->\n            <div class="account__controls__form-groups--last">\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': isResetPasswordErrorOcurred || (resetPasswordForm.password.$invalid && resetPasswordForm.$submitted)}">\n                    <input class="form-control form-control--account" type="password" placeholder="New password"\n                           name="password" ng-model="resetPasswordData.password" required/>\n                    <span class="help-block" ng-if="resetPasswordForm.password.$invalid && resetPasswordForm.$submitted">Your new password is mandatory.</span>\n                </div>\n\n                <!-- Form group -->\n                <div class="form-group" ng-class="{\'has-error\': isResetPasswordErrorOcurred || (resetPasswordForm.passwordConfirmation.$invalid && resetPasswordForm.$submitted)}">\n                    <input class="form-control form-control--account" type="password"\n                           placeholder="New password confirmation" name="passwordConfirmation"\n                           ng-model="resetPasswordData.passwordConfirmation" required/>\n                    <span class="help-block" ng-if="resetPasswordForm.passwordConfirmation.$invalid && resetPasswordForm.$submitted">Your confirm password is mandatory.</span>\n                </div>\n            </div>\n\n            <!-- Button container -->\n            <button class="btn account__button" type="submit">Reset password</button>\n        </div>\n    </form>\n\n</div>\n\n<!-- Change password section successfully-->\n<div class="account__section" ng-hide="!successfullyReseted">\n\n    <!-- Title -->\n    <h1 class="account__title">Successfully</h1>\n\n    <!-- Explain -->\n    <span class="account__explain">\n        We\'ve successfully updated your new password.\n    </span>\n</div>')}]),angular.module("app/common/partials/emailList/emailList.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/emailList/emailList.html",'<div ng-repeat="email in emails track by $index">\n    <ng-form name="emailForm">\n        <div class="form-group" ng-class="{\'has-error\': emailForm.email.$invalid && parentForm.$submitted}">\n            <input class="form-control form-control--friend-email" type="email"\n                   placeholder="Your friend\'s email address" name="email" ng-model="emails[$index]" required/>\n            <a href="#" class="close" tabindex="-1" ng-click="removeEmail($index)">×</a>\n        </div>\n    </ng-form>\n</div>\n\n<a class="btn-add-emails" href="#" ng-click="addEmail()" ng-show="canAddEmail">Add another email recipient</a>')}]),angular.module("app/common/partials/header-home.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/header-home.html",'<header class="header-home">\n    <div class="header__wrapper">\n\n        <div class="header__wrapper__logo">\n            Reme\n        </div>\n\n        <div class="header__wrapper__menu">\n            <ul class="header__wrapper__menu__navbar">\n                <li><a href="#">Pricing</a></li>\n                <li><a href="#">About</a></li>\n                <li><a class="btn-outline btn--login" href="javascript:void(0)" ui-sref="account">Login</a></li>\n\n            </ul>\n        </div>\n\n    </div>\n</header>')}]),angular.module("app/common/partials/header.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/header.html",'<header class="header">\n    <div class="header__wrapper">\n\n        <div class="header__wrapper__logo">\n            Reme\n        </div>\n\n        <div class="header__wrapper__menu dropdown" dropdown>\n            <a ng-show="currentUser.model.email" class="link-dark-bg dropdown-toggle header__wrapper__menu__email"\n               dropdown-toggle href="javascript:void(0)">{{currentUser.model.email}}<span class="caret"></span></a>\n              <ul class="dropdown-menu" role="menu">\n                <li><a class="nav-link" href="javascript:void(0)" ui-sref="reminders">My reminders</a></li>\n                <li><a class="nav-link" href="javascript:void(0)" ui-sref="profile">Settings</a></li>\n                <li><a class="nav-link" href="javascript:void(0)" ui-sref="profile">Help</a></li>\n                <li><a class="nav-link" href="javascript:void(0)" ui-sref="account:logout">Logout</a></li>\n              </ul>\n        </div>\n\n    </div>\n</header>')}]),angular.module("app/common/partials/timepickerPopup/timepickerPopup.html",[]).run(["$templateCache",function(a){a.put("app/common/partials/timepickerPopup/timepickerPopup.html",'<button type="button" class="btn btn--reminder-popup bg-sprite dropdown-toggle" animate animate-on="nlpDate:timeChange"\n        animate-class="animated highlight-button" dropdown-toggle>\n        {{date | date:\'hh:mm a\'}}\n</button>\n<ul class="dropdown-menu dropdown-menu-time-picker" perfect-scrollbar suppress-scroll-x="true" wheel-speed="52" update-on="perfectScrollbar:update">\n    <li ng-repeat="time in times" ng-class="{selected: highlightSelected && time.index == selectedIndex}">\n        <a href ng-click="setTime(time.index, time.hour, time.minute)">{{time.timestamp | date:\'hh:mm a\'}}</a>\n    </li>\n</ul>\n')}]),angular.module("template/datepicker/datepicker.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/datepicker.html",'<table class="datepicker">\n  <thead>\n    <tr class="datepicker-jump-controls">\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)">‹</button></th>\n      <th colspan="{{rows[0].length - 2 + showWeekNumbers}}"><button type="button" class="btn btn-default btn-sm btn-block" ng-click="toggleMode()"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm btn-block pull-right" ng-click="move(1)">›</button></th>\n    </tr>\n    <tr ng-show="labels.length > 0" class="datepicker-day-labels">\n      <th ng-show="showWeekNumbers" class="text-center">#</th>\n      <th ng-repeat="label in labels" class="text-center">{{label}}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows">\n      <td ng-show="showWeekNumbers" class="text-center"><em>{{ getWeekNumber(row) }}</em></td>\n      <td ng-repeat="dt in row" class="text-center">\n        <button type="button" class="btn btn-sm" ng-class="{\'btn-primary\': dt.selected, \'btn-default\': !dt.selected}" ng-click="select(dt.date)" ng-disabled="dt.disabled"><span ng-class="{\'text-muted\': dt.secondary}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/popup.html",[]).run(["$templateCache",function(a){a.put("template/datepicker/popup.html","<ul class=\"dropdown-menu\" ng-style=\"{display: (isOpen && 'block') || 'none', top: position.top+'px', left: position.left+'px'}\">\n	<li ng-transclude></li>\n"+'	<li ng-show="showButtonBar" class="datepicker-button-bar">\n        <button type="button" class="btn btn-sm btn-default btn-block" ng-click="today(dt)">{{currentText}}</button>\n	</li>\n</ul>\n')}]),angular.module("template/modal/backdrop.html",[]).run(["$templateCache",function(a){a.put("template/modal/backdrop.html",'<div class="modal-backdrop fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1040 + index*10}"></div>')}]),angular.module("template/modal/window.html",[]).run(["$templateCache",function(a){a.put("template/modal/window.html",'<div tabindex="-1" class="modal fade {{ windowClass }}" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog"><div class="modal-content" ng-transclude></div></div>\n</div>')}]),angular.module("template/popover/popover.html",[]).run(["$templateCache",function(a){a.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("template/tabs/tab.html",[]).run(["$templateCache",function(a){a.put("template/tabs/tab.html",'<li ng-class="{active: active, disabled: disabled}">\n    <a href ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("template/tabs/tabset.html",[]).run(["$templateCache",function(a){a.put("template/tabs/tabset.html",'<div>\n    <ul class="nav nav-{{type || \'tabs\'}} nav-tabs--reminders nav-tabs--underlined"\n        ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}"\n        ng-transclude></ul>\n    <div class="tab-content">\n        <div class="tab-pane"\n             ng-repeat="tab in tabs"\n             ng-class="{active: tab.active}"\n             tab-content-transclude="tab">\n        </div>\n    </div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-html-unsafe-popup.html",[]).run(["$templateCache",function(a){a.put("template/tooltip/tooltip-html-unsafe-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(a){a.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]);